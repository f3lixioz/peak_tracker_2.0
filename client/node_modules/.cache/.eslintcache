[{"/home/merlin/SDI/co_14ers/peak_finder/client/src/index.js":"1","/home/merlin/SDI/co_14ers/peak_finder/client/src/App.js":"2","/home/merlin/SDI/co_14ers/peak_finder/client/src/components/ListPeak.js":"3","/home/merlin/SDI/co_14ers/peak_finder/client/src/components/NewPeak.js":"4","/home/merlin/SDI/co_14ers/peak_finder/client/src/components/EditDate.js":"5"},{"size":220,"mtime":1627274617717,"results":"6","hashOfConfig":"7"},{"size":429,"mtime":1627289839437,"results":"8","hashOfConfig":"7"},{"size":1847,"mtime":1627305328597,"results":"9","hashOfConfig":"7"},{"size":1695,"mtime":1627301649717,"results":"10","hashOfConfig":"7"},{"size":1884,"mtime":1627298134747,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"tsmk7x",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"14"},"/home/merlin/SDI/co_14ers/peak_finder/client/src/index.js",[],["27","28"],"/home/merlin/SDI/co_14ers/peak_finder/client/src/App.js",["29"],"import './App.css';\nimport React, { Fragment } from 'react'; //https://reactjs.org/docs/fragments.html\n\n//components\nimport NewPeak from \"./components/NewPeak\"\nimport ListPeak from \"./components/ListPeak\"\n// import EditElv from \"./components/EditElv\"\n\nfunction App() {\n  // return <Fragment>\n  return(\n    <div className= \"container\">\n      <NewPeak />\n      <ListPeak />\n    </div>\n  );\n  // </Fragment>;\n}\n\nexport default App;\n","/home/merlin/SDI/co_14ers/peak_finder/client/src/components/ListPeak.js",["30"],"import React, {Fragment, useEffect, useState} from \"react\";\r\nimport EditDate from \"./EditDate\"\r\n\r\n\r\nconst ListPeak = () => {\r\n    \r\n    const [peak, setPeak] = useState([]);\r\n    \r\n    //Get all\r\n    const getPeak = async () => {\r\n        try {\r\n            \r\n            const response = await fetch(\"/peak\")\r\n            const jsonData = await response.json()\r\n\r\n            setPeak(jsonData);\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    //Delete\r\n    const delPeak = async (id) => {\r\n        try {\r\n            const delPeak = await fetch(`/peak/${id}`, {method: \"DELETE\"});\r\n            setPeak(peak.filter(peak => peak.peak_id !== id));\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    useEffect( () => {\r\n        getPeak();\r\n    }, []); //[] To avoid making multiple requests\r\n\r\n    return <Fragment>        \r\n        <table class=\"table mt-5 text-white text-center\">\r\n            <thead>\r\n            <tr>\r\n                <th width=\"300\">Mountain Peaks</th>\r\n                <th width=\"300\">Elevation (ft)</th>\r\n                <th width=\"300\">Summit Date</th>\r\n                <th width=\"10\"></th>\r\n                <th width=\"10\"></th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {peak.map(peak => (\r\n                <tr key={peak.peak_id}>\r\n                    <td>{peak.peak_name}</td>\r\n                    <td>{peak.peak_elv}</td>\r\n                    <td>{peak.bag_date}</td>\r\n                    <td><EditDate peak = {peak}/></td>\r\n                    <td className=\"w3-middle-align\"><button className = \"btn btn-danger\" onClick={() => delPeak(peak.peak_id)}>Delete</button></td>\r\n                </tr>\r\n            ))}\r\n            </tbody>\r\n    </table>\r\n        </Fragment>;\r\n    \r\n};\r\n\r\nexport default ListPeak;","/home/merlin/SDI/co_14ers/peak_finder/client/src/components/NewPeak.js",["31"],"import React, {Fragment, useState} from \"react\";\r\n\r\nconst NewPeak = () => {\r\n\r\n    const [peak_name, setPeakDetails] = useState(\"\");\r\n    \r\n    const onSubmitForm = async(e) => {\r\n        e.preventDefault();\r\n        \r\n        try {\r\n            //RAN INTO PROBLEMS HERE.. UNABLE TO FIGURE OUT HOW TO REFERENCE MULTIPLE FIELDS FROM THE STATE, I.E. peak.peak_name, peak.peak_elv, etc \r\n            const body_name = {peak_name};\r\n            const response = await fetch(\"/peak\", {\r\n                method: \"Post\",\r\n                headers: {\"Content-Type\": \"application/json\"},\r\n                body: JSON.stringify(body_name),\r\n            });\r\n            window.location = \"/\";\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        };\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"text-center mt-5 text-white\">üßó‚Äç‚ôÇÔ∏èPeak Trackerüóª</h1>\r\n            <form className= \"d-flex mt-5\" onSubmit={onSubmitForm}>\r\n                <input \r\n                    type = \"text\" \r\n                    className=\"form-control\" \r\n                    placeholder=\"Peak Name\" \r\n                    onChange={e => setPeakDetails(e.target.value)} //targets the input and gets resulting value\r\n                />\r\n\r\n                {/* <input \r\n                    type = \"text\" \r\n                    className=\"form-control\" \r\n                    value={peak.peak_elv} \r\n                    onChange={e => setPeakDetails(e.target.value)} //targets the input and gets resulting value\r\n                /> */}\r\n\r\n                <button className = \"btn btn-success\">Add</button>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default NewPeak;","/home/merlin/SDI/co_14ers/peak_finder/client/src/components/EditDate.js",["32"],"import React, {Fragment, useState} from \"react\";\r\n\r\nconst EditDate = ({peak}) => {\r\n  console.log(peak);\r\n  const [bag_date, setDate] = useState(peak.bag_date);\r\n\r\n  const onSubmitForm = async(e) => {\r\n      e.preventDefault();\r\n\r\n      try {\r\n          const body = {bag_date};\r\n          const response = await fetch(`http://localhost:5000/peak/${peak.peak_id}`,{\r\n              method: \"PATCH\",\r\n              headers: { \"Content-Type\": \"application/json\" },\r\n              body: JSON.stringify(body)\r\n          });\r\n          window.location = \"/\";\r\n      } catch (err) {\r\n          console.error(err.message);\r\n      };\r\n  };\r\n\r\n  return <Fragment>\r\n\r\n      <button type=\"button\" class=\"btn btn-info\" data-bs-toggle=\"modal\" data-bs-target={`#id${peak.peak_id}`}>Edit</button>\r\n      <div class=\"modal\" id={`id${peak.peak_id}`} onClick={() => setDate(bag_date)}>\r\n          <div class=\"modal-dialog\">\r\n              <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                      <h4 class=\"modal-title\">Edit Date</h4>\r\n                      <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" onClick={() => setDate(bag_date)}></button>\r\n                  </div>\r\n\r\n                  <div className=\"modal-body\">\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"YYYY-MM-DD\" onChange={e => setDate(e.target.value)}/>\r\n                  </div>\r\n\r\n                  <div class=\"modal-footer\">\r\n                      <button type=\"button\" class=\"btn btn-primary\" data-bs-dismiss=\"modal\" onClick={e => onSubmitForm(e)}>Confirm</button>\r\n                      <button type=\"button\" class=\"btn btn-danger\"  data-bs-dismiss=\"modal\" onClick={() => setDate(bag_date)}>Exit</button>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  </Fragment>;\r\n};\r\n\r\nexport default EditDate;",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":2,"column":17,"nodeType":"39","messageId":"40","endLine":2,"endColumn":25},{"ruleId":"37","severity":1,"message":"41","line":25,"column":19,"nodeType":"39","messageId":"40","endLine":25,"endColumn":26},{"ruleId":"37","severity":1,"message":"42","line":13,"column":19,"nodeType":"39","messageId":"40","endLine":13,"endColumn":27},{"ruleId":"37","severity":1,"message":"42","line":12,"column":17,"nodeType":"39","messageId":"40","endLine":12,"endColumn":25},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'delPeak' is assigned a value but never used.","'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]