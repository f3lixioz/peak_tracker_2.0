{"ast":null,"code":"var _jsxFileName = \"/home/merlin/SDI/co_14ers/frontend/src/components/ListTodo.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\"; // import EditTodo from \"./EditTodo\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListTodo = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]); //delete function\n\n  const delTodo = async id => {\n    try {\n      const delTodo = await fetch(`http://localhost:5000/todos/${id}`, {\n        method: \"DELETE\"\n      }); // window.location = \"/\";\n\n      setTodos(todos.filter(todo => todo.todo_id !== id));\n    } catch (err) {\n      console.error(err.message);\n    }\n  }; //list function\n\n\n  const getTodos = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/todos\");\n      const jsonData = await response.json(); //need to parse it first \n\n      setTodos(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getTodos();\n  }, []); //[] To avoid making multiple requests\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"table mt-5 text-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            width: \"1000\",\n            children: \"Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            width: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: todo.task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            class: \"w3-right-align\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => delTodo(todo.todo_id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this)]\n        }, todo.todo_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ListTodo, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n\n_c = ListTodo;\nexport default ListTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTodo\");","map":{"version":3,"sources":["/home/merlin/SDI/co_14ers/frontend/src/components/ListTodo.js"],"names":["React","Fragment","useEffect","useState","ListTodo","todos","setTodos","delTodo","id","fetch","method","filter","todo","todo_id","err","console","error","message","getTodos","response","jsonData","json","map","task"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAoD,OAApD,C,CACA;;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC,CAFmB,CAKnB;;AAEA,QAAMI,OAAO,GAAG,MAAOC,EAAP,IAAc;AAC1B,QAAI;AACA,YAAMD,OAAO,GAAG,MAAME,KAAK,CAAE,+BAA8BD,EAAG,EAAnC,EAAsC;AAACE,QAAAA,MAAM,EAAE;AAAT,OAAtC,CAA3B,CADA,CAEA;;AACAJ,MAAAA,QAAQ,CAACD,KAAK,CAACM,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,OAAL,KAAiBL,EAAtC,CAAD,CAAR;AACH,KAJD,CAIE,OAAOM,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACH;AACJ,GARD,CAPmB,CAiBnB;;;AACA,QAAMC,QAAQ,GAAG,YAAY;AACzB,QAAI;AAEA,YAAMC,QAAQ,GAAG,MAAMV,KAAK,CAAC,6BAAD,CAA5B;AACA,YAAMW,QAAQ,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAvB,CAHA,CAGuC;;AAEvCf,MAAAA,QAAQ,CAACc,QAAD,CAAR;AACH,KAND,CAME,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACH;AACJ,GAVD;;AAYAf,EAAAA,SAAS,CAAE,MAAM;AACbgB,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT,CA9BmB,CAgCX;;AAER,sBAAO,QAAC,QAAD;AAAA,2BACH;AAAO,MAAA,KAAK,EAAC,uBAAb;AAAA,8BACI;AAAA,+BACA;AAAA,kCACI;AAAI,YAAA,KAAK,EAAC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAI,YAAA,KAAK,EAAC;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAA,kBAMCb,KAAK,CAACiB,GAAN,CAAUV,IAAI,iBACX;AAAA,kCACI;AAAA,sBAAKA,IAAI,CAACW;AAAV;AAAA;AAAA;AAAA;AAAA,kBADJ,eAGI;AAAI,YAAA,KAAK,EAAC,gBAAV;AAAA,mCAA2B;AAAQ,cAAA,SAAS,EAAG,gBAApB;AAAqC,cAAA,OAAO,EAAE,MAAMhB,OAAO,CAACK,IAAI,CAACC,OAAN,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA3B;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA,WAASD,IAAI,CAACC,OAAd;AAAA;AAAA;AAAA;AAAA,gBADH;AAND;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AA0BH,CA5DD;;GAAMT,Q;;KAAAA,Q;AA8DN,eAAeA,QAAf","sourcesContent":["import React, { Fragment, useEffect, useState} from \"react\";\r\n// import EditTodo from \"./EditTodo\"\r\n\r\n\r\nconst ListTodo = () => {\r\n    \r\n    const [todos, setTodos] = useState([]);\r\n    \r\n\r\n    //delete function\r\n\r\n    const delTodo = async (id) => {\r\n        try {\r\n            const delTodo = await fetch(`http://localhost:5000/todos/${id}`, {method: \"DELETE\"});\r\n            // window.location = \"/\";\r\n            setTodos(todos.filter(todo => todo.todo_id !== id));\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    //list function\r\n    const getTodos = async () => {\r\n        try {\r\n            \r\n            const response = await fetch(\"http://localhost:5000/todos\")\r\n            const jsonData = await response.json() //need to parse it first \r\n\r\n            setTodos(jsonData);\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    useEffect( () => {\r\n        getTodos();\r\n    }, []); //[] To avoid making multiple requests\r\n\r\n    return <Fragment>        \r\n        <table class=\"table mt-5 text-white\">\r\n            <thead>\r\n            <tr>\r\n                <th width=\"1000\">Task</th>\r\n                <th width=\"1\"></th>\r\n                {/* <th> </th> */}\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {/* <tr>\r\n                <td>John</td>\r\n                <td>Doe</td>\r\n                <td>john@example.com</td>\r\n            </tr> */}\r\n            {todos.map(todo => (\r\n                <tr key={todo.todo_id}>\r\n                    <td>{todo.task}</td>\r\n                    {/* <td><EditTodo /></td> */}\r\n                    <td class=\"w3-right-align\"><button className = \"btn btn-danger\" onClick={() => delTodo(todo.todo_id)}>Delete</button></td>\r\n                </tr>\r\n            ))}\r\n            </tbody>\r\n    </table>\r\n        </Fragment>;\r\n    \r\n};\r\n\r\nexport default ListTodo;"]},"metadata":{},"sourceType":"module"}