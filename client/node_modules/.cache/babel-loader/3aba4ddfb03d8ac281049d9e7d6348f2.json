{"ast":null,"code":"var _jsxFileName = \"/home/merlin/SDI/co_14ers/client/src/components/NewPeak.js\";\n// import e from \"express\";\nimport React, { Fragment, useState, Component } from \"react\"; // const NewPeak = () => {\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [peak_name, peak_elv, setPeakName, setPeakElv] = useState(\"\");\n\nconst onSubmitForm = async e => {\n  e.preventDefault();\n\n  try {\n    const body_name = {\n      peak_name\n    };\n    const body_elv = {\n      peak_elv\n    };\n    const response = await fetch(\"http://localhost:5000/peak\", {\n      method: \"Post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body_name: JSON.stringify(body_name),\n      body_elv: JSON.stringify(body_elv)\n    });\n    window.location = \"/\";\n  } catch (err) {\n    console.error(err.message);\n  }\n}; //     return (\n//         <Fragment>\n//             <h1 className=\"text-center mt-5 text-white\">Peak Tracker</h1>\n//             <form className= \"d-flex mt-5\" onSubmit={onSubmitForm}>\n//                 <input \n//                     type = \"text\" \n//                     className=\"form-control\" \n//                     value={peak_name} \n//                     onChange={e => setPeakName(e.target.value)} //targets the input and gets resulting value\n//                 />\n//                 <input \n//                     type = \"text\" \n//                     className=\"form-control\" \n//                     value={peak_elv} \n//                     onChange={e => setPeakElv(e.target.value)} //targets the input and gets resulting value\n//                 />\n//                 <button className = \"btn btn-success\">Add</button>\n//             </form>\n//         </Fragment>\n//     )\n// }\n\n\nclass NewPeak extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      peak_name: '',\n      peak_elv: null,\n      bag_date: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  } // Form submitting logic, prevent default page refresh \n\n\n  handleSubmit(event) {\n    const {\n      peak_name,\n      peak_elv,\n      bag_date\n    } = this.state;\n    event.preventDefault();\n    alert(`\n        ____Your Details____\\n\n        peak_name : ${peak_name}\n        Name : ${peak_elv}\n        Age : ${bag_date}\n      `);\n  } // Method causes to store all the values of the \n  // input field in react state single method handle \n  // input changes of all the input field using ES6 \n  // javascript feature computed property names\n\n\n  handleChange(event) {\n    this.setState({\n      // Computed property names\n      // keys of the objects are computed dynamically\n      [event.target.name]: event.target.value\n    });\n  } // Return a controlled form i.e. values of the \n  // input field not stored in DOM values are exist \n  // in react component itself as state\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"peak_name\",\n          children: \"peak_name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"peak_name\",\n          placeholder: \"peak_name\",\n          value: this.state.peak_name,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"peak_elv\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"peak_elv\",\n          placeholder: \"Name\",\n          value: this.state.peak_elv,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"bag_date\",\n          children: \"Age\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"bag_date\",\n          placeholder: \"Age\",\n          value: this.state.bag_date,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default NewPeak;","map":{"version":3,"sources":["/home/merlin/SDI/co_14ers/client/src/components/NewPeak.js"],"names":["React","Fragment","useState","Component","peak_name","peak_elv","setPeakName","setPeakElv","onSubmitForm","e","preventDefault","body_name","body_elv","response","fetch","method","headers","JSON","stringify","window","location","err","console","error","message","NewPeak","constructor","props","state","bag_date","handleChange","bind","handleSubmit","event","alert","setState","target","name","value","render"],"mappings":"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","sourcesContent":["// import e from \"express\";\r\nimport React, {Fragment, useState, Component} from \"react\";\r\n\r\n// const NewPeak = () => {\r\n\r\n    const [peak_name, peak_elv, setPeakName, setPeakElv] = useState(\"\");\r\n    \r\n    const onSubmitForm = async(e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const body_name = {peak_name};\r\n            const body_elv = {peak_elv};\r\n            const response = await fetch(\"http://localhost:5000/peak\", {\r\n                method: \"Post\",\r\n                headers: {\"Content-Type\": \"application/json\"},\r\n                body_name: JSON.stringify(body_name),\r\n                body_elv: JSON.stringify(body_elv)\r\n            });\r\n            window.location = \"/\";\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    }\r\n\r\n//     return (\r\n//         <Fragment>\r\n//             <h1 className=\"text-center mt-5 text-white\">Peak Tracker</h1>\r\n//             <form className= \"d-flex mt-5\" onSubmit={onSubmitForm}>\r\n//                 <input \r\n//                     type = \"text\" \r\n//                     className=\"form-control\" \r\n//                     value={peak_name} \r\n//                     onChange={e => setPeakName(e.target.value)} //targets the input and gets resulting value\r\n//                 />\r\n//                 <input \r\n//                     type = \"text\" \r\n//                     className=\"form-control\" \r\n//                     value={peak_elv} \r\n//                     onChange={e => setPeakElv(e.target.value)} //targets the input and gets resulting value\r\n//                 />\r\n//                 <button className = \"btn btn-success\">Add</button>\r\n//             </form>\r\n//         </Fragment>\r\n//     )\r\n// }\r\n\r\nclass NewPeak extends Component{\r\n    constructor(props){\r\n      super(props)\r\n      this.state = { peak_name:'', peak_elv:null, bag_date:''}\r\n      this.handleChange = this.handleChange.bind(this)\r\n      this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    \r\n    // Form submitting logic, prevent default page refresh \r\n    handleSubmit(event){\r\n      const { peak_name, peak_elv, bag_date} = this.state\r\n      event.preventDefault()\r\n      alert(`\r\n        ____Your Details____\\n\r\n        peak_name : ${peak_name}\r\n        Name : ${peak_elv}\r\n        Age : ${bag_date}\r\n      `)\r\n    }\r\n    \r\n    // Method causes to store all the values of the \r\n    // input field in react state single method handle \r\n    // input changes of all the input field using ES6 \r\n    // javascript feature computed property names\r\n    handleChange(event){\r\n      this.setState({\r\n        // Computed property names\r\n        // keys of the objects are computed dynamically\r\n        [event.target.name] : event.target.value\r\n      })\r\n    }\r\n    \r\n    // Return a controlled form i.e. values of the \r\n    // input field not stored in DOM values are exist \r\n    // in react component itself as state\r\n    render(){\r\n      return(\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div>\r\n            <label htmlFor='peak_name'>peak_name</label>\r\n            <input \r\n              name='peak_name'\r\n              placeholder='peak_name' \r\n              value = {this.state.peak_name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor='peak_elv'>Name</label>\r\n            <input\r\n              name='peak_elv' \r\n              placeholder='Name'\r\n              value={this.state.peak_elv}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor='bag_date'>Age</label>\r\n            <input\r\n              name='bag_date' \r\n              placeholder='Age'\r\n              value={this.state.bag_date}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n            <button>Create Account</button>\r\n        </form>\r\n      )\r\n    }\r\n  }\r\n\r\nexport default NewPeak;"]},"metadata":{},"sourceType":"module"}