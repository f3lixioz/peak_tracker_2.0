{"ast":null,"code":"var _jsxFileName = \"/home/merlin/SDI/co_14ers/client/src/components/InputTodo.js\",\n    _s = $RefreshSig$();\n\n// import e from \"express\";\nimport React, { Fragment, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputTodo = () => {\n  _s();\n\n  const [task, setTask] = useState(\"\");\n\n  const onSubmitForm = async e => {\n    e.preventDefault(); //don't want this to refresh\n\n    try {\n      const body = {\n        task\n      };\n      const response = await fetch(\"http://localhost:5000/todos\", {\n        method: \"Post\",\n        //add data to db! default is fetch, so need to specify\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        //sending JSON data\n        body: JSON.stringify(body)\n      }); // console.log(response);\n\n      window.location = \"/\"; //Once submitted, will refresh/show changes\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center mt-5 text-white\",\n      children: \"Simpler Todo App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"d-flex mt-5\",\n      onSubmit: onSubmitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: task,\n        onChange: e => setTask(e.target.value) //targets the input and gets resulting value\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InputTodo, \"68Y0odjr5YYZ1eMe5aWHrdIJ63Q=\");\n\n_c = InputTodo;\nexport default InputTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputTodo\");","map":{"version":3,"sources":["/home/merlin/SDI/co_14ers/client/src/components/InputTodo.js"],"names":["React","Fragment","useState","InputTodo","task","setTask","onSubmitForm","e","preventDefault","body","response","fetch","method","headers","JSON","stringify","window","location","err","console","error","message","target","value"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,QAAzB,QAAwC,OAAxC;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMI,YAAY,GAAG,MAAMC,CAAN,IAAY;AAC7BA,IAAAA,CAAC,CAACC,cAAF,GAD6B,CACT;;AACpB,QAAI;AACA,YAAMC,IAAI,GAAG;AAACL,QAAAA;AAAD,OAAb;AACA,YAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,EAAgC;AACxDC,QAAAA,MAAM,EAAE,MADgD;AACxC;AAChBC,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB,SAF+C;AAET;AAC/CJ,QAAAA,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAeN,IAAf;AAHkD,OAAhC,CAA5B,CAFA,CAOA;;AACAO,MAAAA,MAAM,CAACC,QAAP,GAAkB,GAAlB,CARA,CAQuB;AAC1B,KATD,CASE,OAAOC,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACH;AACJ,GAdD;;AAgBA,sBACI,QAAC,QAAD;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,SAAS,EAAE,aAAjB;AAA+B,MAAA,QAAQ,EAAEf,YAAzC;AAAA,8BACI;AACI,QAAA,IAAI,EAAG,MADX;AAEI,QAAA,SAAS,EAAC,cAFd;AAGI,QAAA,KAAK,EAAEF,IAHX;AAII,QAAA,QAAQ,EAAEG,CAAC,IAAIF,OAAO,CAACE,CAAC,CAACe,MAAF,CAASC,KAAV,CAJ1B,CAI4C;;AAJ5C;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAQ,QAAA,SAAS,EAAG,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAlCD;;GAAMpB,S;;KAAAA,S;AAoCN,eAAeA,SAAf","sourcesContent":["// import e from \"express\";\r\nimport React, {Fragment, useState} from \"react\";\r\n\r\nconst InputTodo = () => {\r\n\r\n    const [task, setTask] = useState(\"\");\r\n    \r\n    const onSubmitForm = async(e) => {\r\n        e.preventDefault(); //don't want this to refresh\r\n        try {\r\n            const body = {task};\r\n            const response = await fetch(\"http://localhost:5000/todos\", {\r\n                method: \"Post\", //add data to db! default is fetch, so need to specify\r\n                headers: {\"Content-Type\": \"application/json\"}, //sending JSON data\r\n                body: JSON.stringify(body)\r\n            });\r\n            // console.log(response);\r\n            window.location = \"/\"; //Once submitted, will refresh/show changes\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"text-center mt-5 text-white\">Simpler Todo App</h1>\r\n            <form className= \"d-flex mt-5\" onSubmit={onSubmitForm}>\r\n                <input \r\n                    type = \"text\" \r\n                    className=\"form-control\" \r\n                    value={task} \r\n                    onChange={e => setTask(e.target.value)} //targets the input and gets resulting value\r\n                />\r\n                <button className = \"btn btn-success\">Add</button>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default InputTodo;"]},"metadata":{},"sourceType":"module"}